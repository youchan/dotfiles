autoload -Uz add-zsh-hook
autoload -Uz colors; colors
autoload -Uz vcs_info

setopt prompt_subst
export LSCOLORS=gxfxcxdxbxegedabagacad
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'
EDITOR='vim'
PROMPT=$'%#%{\e[m%}%'"{%} "

zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' formats '(%b)'
zstyle ':vcs_info:*' actionformats '(%b|%a)'

function _update_vcs_info_msg() {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
add-zsh-hook precmd _update_vcs_info_msg

RPROMPT="%F{yellow}[%~]%1(v|%F{green}%1v%f|)%F{yellow}%{${reset_color}%}"

fpath=(/usr/local/share/zsh-completions $fpath)
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' menu select=1
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:git:*' script /usr/local/share/git-core/contrib/completion/git-completion.zsh
## Completion configuration
autoload -Uz compinit
compinit

function vp() {
    vim `find . -name "*.$1" | peco`
}

VIM_APP_DIR=/usr/local/Cellar/macvim/current

source ~/.aliases
source ~/.hash

function gg() {
    PECO_SELS=`git grep -n $1 | peco`
    if test $? -eq 0
    then
      vim `echo $PECO_SELS | awk -F":" '{ print "-c " $2 " " $1 }'`
    fi
}

function ga() {
    PECO_SELS=`git st -s | peco`
    if test $? -eq 0
    then
      git add `echo $PECO_SEL | awk -F" " '{ print $2 }'`S
    fi
}

function fixup() {
    PECO_SELS=`git log --pretty="%h %s(%an) %d" | peco`
    if test $? -eq 0
    then
      git commit --fixup `echo $PECO_SELS | awk -F" " '{ print $1 }'`
    fi
}

echo
fortune
