autoload -Uz add-zsh-hook
autoload -Uz colors; colors
autoload -Uz vcs_info

setopt prompt_subst
export LSCOLORS=gxfxcxdxbxegedabagacad
export CLICOLOR=1

export SCREENEXCHANGE=$HOME/.screen_exchange
export SCREEN_MSGMINWAIT=1

export HISTFILE=${HOME}/.zsh_history
export HISTSIZE=2000
export SAVEHIST=10000
setopt hist_ignore_dups
setopt share_history
setopt EXTENDED_HISTORY

bindkey "^p" history-beginning-search-backward
bindkey "^n" history-beginning-search-forward
bindkey '^r' history-incremental-pattern-search-backward
bindkey '^s' history-incremental-pattern-search-forward

export CLIPBOARD=$HOME/.clipboard
export CLMAXHIST=20
export CLSEP=$'\x07' # $'\x07' is BEL
export CLX="pbcopy" #xsel/xclip
export CLXOS="pbcopy"

export GOPATH=$HOME/gocode

export PYENV_ROOT="$HOME/.pyenv"

source ~/.gh_api_token

WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'
EDITOR='vim'
PROMPT=$'%m %#%{\e[m%}%'"{%} "

export PATH="$HOME/bin:$HOME/.nodebrew/current/bin:$HOME/.rbenv/bin:$PYENV_ROOT/bin:$HOME/gocode/bin:/opt/local/bin:/opt/local/sbin:/Library/TeX/texbin:$SCALA_HOME/bin:$LLVM_HOME/bin:/usr/local/bin:$PATH"
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig

export PATH="$HOME/google-cloud-sdk/bin:$PATH"

eval "$(rbenv init -)"

if which hub >/dev/null 2>&1; then
  eval "$(hub alias -s)"
fi

if which pyenv >/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' formats '(%b)'
zstyle ':vcs_info:*' actionformats '(%b|%a)'

function _update_vcs_info_msg() {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
add-zsh-hook precmd _update_vcs_info_msg

RPROMPT="%F{yellow}[%~]%1(v|%F{green}%1v%f|)%F{yellow}%{${reset_color}%}"

fpath=(/usr/local/share/zsh-completions $fpath)
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' menu select=1
zstyle ':completion:*' verbose true
#zstyle ':completion:*:*:git:*' script /usr/local/share/git-core/contrib/completion/git-completion.zsh
zstyle ':completion:*:*:git:*' source /usr/local/share/zsh/site-functions/_git
## Completion configuration
autoload -Uz compinit
compinit

function vp() {
    vim `find . -name "*.$1" | peco`
}

VIM_APP_DIR=/usr/local/Cellar/macvim/current

source ~/.aliases
source ~/.hash

function gg() {
    PECO_SELS=`git grep -n $1 | peco`
    if [ "$?" -eq 0 ]; then
      vim `echo $PECO_SELS | awk -F":" '{ print "-c " $2 " " $1 }'`
    fi
}

function gst() {
    PECO_SELS=`git st -s | peco`
    if [ "$?" -eq 0 ]; then
      echo $PECO_SELS | awk -F" " '{ print $2 }'
    fi
}

function fixup() {
    PECO_SELS=`git log --pretty="%h %s(%an) %d" | peco`
    if [ "$?" -eq 0 ]; then
      git commit --fixup `echo $PECO_SELS | awk -F" " '{ print $1 }'`
    fi
}

function git-hash() {
    git log --pretty="%h %s(%an) %d" | peco --prompt "GIT HASH>" | awk '{ print $1 }'
}

function git-hash2() {
    git log HEAD..master --pretty="%h %s(%an) %d" | peco --prompt "GIT HASH>" | awk '{ print $1 }'
}

function git-changed-files() {
    git status -s | peco --prompt "GIT CHANGED FILES>" | awk '{ print $2 }'
}

function propen() {
    local current_branch_name=$(git symbolic-ref --short HEAD | xargs ruby -ruri -e 'puts URI.escape(ARGV[0])')
    hub browse -- pull/${current_branch_name}
}
echo
fortune

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
